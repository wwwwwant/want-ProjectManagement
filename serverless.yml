# NOTE: update this with your service name
service: projectManagement

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: eu-west-2
  # To load environment variables externally
  # rename env.example to env.yml and uncomment
  # the following line. Also, make sure to not
  # commit your env.yml.
  #
  #environment: ${file(env.yml):${self:provider.stage}}
  iamRoleStatements:
  - Effect: Allow
    Action:
    - dynamodb:DescribeTable
    - dynamodb:Query
    - dynamodb:Scan
    - dynamodb:GetItem
    - dynamodb:PutItem
    - dynamodb:UpdateItem
    - dynamodb:DeleteItem
    - lambda:InvokeFunction
    Resource: "arn:aws:dynamodb:eu-west-2:*:*"


functions:

  createUser:
    handler: userFunc/createUser.main
    events:
      - http:
          path: createUser
          method: post
          cors: true
          authorizer: aws_iam
  deleteUser:
    handler: userFunc/deleteUser.main
    events:
      - http:
          path: deleteUser/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  updateUser:
    handler: userFunc/updateUser.main
    events:
    - http:
        path: updateUser/{id}
        method: put
        cors: true
        authorizer: aws_iam
  getUser:
    handler: userFunc/getUser.main
    events:
    - http:
        path: getUser/{id}
        method: get
        cors: true
        authorizer: aws_iam
  listUser:
    handler: userFunc/listUser.main
    events:
    - http:
        path: listUser
        method: post
        cors: true
        authorizer: aws_iam
  createProject:
    handler: projectFunc/createProject.main
    events:
    - http:
        path: createProject
        method: post
        cors: true
        authorizer: aws_iam
  deleteProject:
    handler: projectFunc/deleteProject.main
    events:
    - http:
        path: deleteProject/{id}
        method: delete
        cors: true
        authorizer: aws_iam
  updateProject:
    handler: projectFunc/updateProject.main
    events:
    - http:
        path: updateProject/{id}
        method: put
        cors: true
        authorizer: aws_iam
  getProject:
    handler: projectFunc/getProject.main
    events:
    - http:
        path: getProject/{id}
        method: get
        cors: true
        authorizer: aws_iam
  listProject:
    handler: projectFunc/listProject.main
    events:
    - http:
        path: listProject
        method: post
        cors: true
        authorizer: aws_iam
  test:
    handler: userFunc/test.main
    events:
